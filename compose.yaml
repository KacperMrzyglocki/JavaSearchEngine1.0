services:
  hazelcast:
    image: hazelcast/hazelcast:latest
    ports:
      - "5701:5701"
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - hazelnut-data:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5701"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    hostname: "nginx"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./nginx/ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ./nginx/ssl/localhost.key:/etc/ssl/certs/localhost.key:ro
      - ./nginx/logs/:/var/log/nginx/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - hazelcast
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  crawler:
    image: crawler
    tty: true
    stdin_open: true
    volumes:
      - data-lake:/app/data-lake
    depends_on:
      - hazelcast
      - nginx
    networks:
      - net
    deploy:
      replicas: 5
      placement:
        constraints: [node.role == worker]
    environment:
      - HAZELCAST_HOST=hazelcast
      - HAZELCAST_PORT=5701
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx"]
      interval: 30s
      timeout: 10s
      retries: 5

  indexer:
    image: indexer
    tty: true
    stdin_open: true
    volumes:
      - data-lake:/app/data-lake
      - data-mart:/app/data-mart
    depends_on:
      - hazelcast
      - nginx
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
    environment:
      - HAZELCAST_HOST=hazelcast
      - HAZELCAST_PORT=5701
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx"]
      interval: 30s
      timeout: 10s
      retries: 5

  query:
    image: query
    tty: true
    stdin_open: true
    volumes:
      - data-mart:/app/data-mart
    depends_on:
      - hazelcast
      - nginx
    networks:
      - net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
    environment:
      - HAZELCAST_HOST=hazelcast
      - HAZELCAST_PORT=5701
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nginx"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  net:
    driver: overlay
    attachable: true

volumes:
  hazelnut-data:
    driver: local
  data-lake:
    driver: local
  data-mart:
    driver: local
